{
    "title": "AWS WAF Regional",
    "description": "This is the <i>AWS WAF Regional API Reference</i> for using AWS WAF with Elastic Load Balancing (ELB) Application Load Balancers. The AWS WAF actions and data types listed in the reference are available for protecting Application Load Balancers. You can use these actions and data types by means of the endpoints listed in <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#waf_region\">AWS Regions and Endpoints</a>. This guide is for developers who need detailed information about the AWS WAF API actions, data types, and errors. For detailed information about AWS WAF features and an overview of how to use the AWS WAF API, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/\">AWS WAF Developer Guide</a>.",
    "docsUrl": "https://docs.aws.amazon.com/waf-regional/",
    "url": "https://api.apis.guru/v2/specs/amazonaws.com/waf-regional/2016-11-28/swagger.json",
    "envVars": {},
    "credentials": {
        "fields": {
            "server": {
                "label": "Server",
                "viewClass": "SelectView",
                "model": [
                    "https://waf-regional.amazonaws.com/",
                    "http://waf-regional.amazonaws.com/",
                    "--- Custom URL"
                ],
                "required": true
            },
            "otherServer": {
                "label": "Custom Server URL",
                "viewClass": "TextFieldView"
            },
            "auth_hmac": {
                "label": "Authorization (hmac)",
                "viewClass": "TextFieldView",
                "note": "Amazon Signature authorization v4"
            }
        }
    },
    "triggers": {
        "startFlow": {
            "main": "./lib/triggers/startFlow.js",
            "type": "polling",
            "title": "Start Flow",
            "fields": {}
        }
    },
    "actions": {
        "AssociateWebACL": {
            "main": "./lib/actions/AssociateWebACL.js",
            "title": "AssociateWebACL",
            "description": "Associates a web ACL with a resource, either an application load balancer or Amazon API Gateway stage.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssociateWebACL.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateByteMatchSet": {
            "main": "./lib/actions/CreateByteMatchSet.js",
            "title": "CreateByteMatchSet",
            "description": "Creates a ByteMatchSet. You then use UpdateByteMatchSet to identify the part of\na web request that you want AWS WAF to inspect, such as the values of the \nUser-Agent header or the query string. For example, you can create a \nByteMatchSet that matches any requests with User-Agent headers that contain the\nstring BadBot. You can then configure AWS WAF to reject those requests.\n\nTo create and configure a ByteMatchSet, perform the following steps:\n\n 1.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of a CreateByteMatchSet request.\n    \n    \n 2.  Submit a CreateByteMatchSet request.\n    \n    \n 3.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of an UpdateByteMatchSet request.\n    \n    \n 4.  Submit an UpdateByteMatchSet request to specify the part of the request that\n    you want AWS WAF to inspect (for example, the header or the URI) and the\n    value that you want AWS WAF to watch for.\n    \n    \n\nFor more information about how to use the AWS WAF API to allow or block HTTP\nrequests, see the AWS WAF Developer Guide\n[https://docs.aws.amazon.com/waf/latest/developerguide/].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateByteMatchSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateGeoMatchSet": {
            "main": "./lib/actions/CreateGeoMatchSet.js",
            "title": "CreateGeoMatchSet",
            "description": "Creates an GeoMatchSet, which you use to specify which web requests you want to\nallow or block based on the country that the requests originate from. For\nexample, if you're receiving a lot of requests from one or more countries and\nyou want to block the requests, you can create an GeoMatchSet that contains\nthose countries and then configure AWS WAF to block the requests. \n\nTo create and configure a GeoMatchSet, perform the following steps:\n\n 1.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of a CreateGeoMatchSet request.\n    \n    \n 2.  Submit a CreateGeoMatchSet request.\n    \n    \n 3.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of an UpdateGeoMatchSet request.\n    \n    \n 4.  Submit an UpdateGeoMatchSetSet request to specify the countries that you\n    want AWS WAF to watch for.\n    \n    \n\nFor more information about how to use the AWS WAF API to allow or block HTTP\nrequests, see the AWS WAF Developer Guide\n[https://docs.aws.amazon.com/waf/latest/developerguide/].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateGeoMatchSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateIPSet": {
            "main": "./lib/actions/CreateIPSet.js",
            "title": "CreateIPSet",
            "description": "Creates an IPSet, which you use to specify which web requests that you want to\nallow or block based on the IP addresses that the requests originate from. For\nexample, if you're receiving a lot of requests from one or more individual IP\naddresses or one or more ranges of IP addresses and you want to block the\nrequests, you can create an IPSet that contains those IP addresses and then\nconfigure AWS WAF to block the requests. \n\nTo create and configure an IPSet, perform the following steps:\n\n 1.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of a CreateIPSet request.\n    \n    \n 2.  Submit a CreateIPSet request.\n    \n    \n 3.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of an UpdateIPSet request.\n    \n    \n 4.  Submit an UpdateIPSet request to specify the IP addresses that you want AWS\n    WAF to watch for.\n    \n    \n\nFor more information about how to use the AWS WAF API to allow or block HTTP\nrequests, see the AWS WAF Developer Guide\n[https://docs.aws.amazon.com/waf/latest/developerguide/].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateIPSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateRateBasedRule": {
            "main": "./lib/actions/CreateRateBasedRule.js",
            "title": "CreateRateBasedRule",
            "description": "Creates a RateBasedRule. The RateBasedRule contains a RateLimit, which specifies\nthe maximum number of requests that AWS WAF allows from a specified IP address\nin a five-minute period. The RateBasedRule also contains the IPSet objects, \nByteMatchSet objects, and other predicates that identify the requests that you\nwant to count or block if these requests exceed the RateLimit.\n\nIf you add more than one predicate to a RateBasedRule, a request not only must\nexceed the RateLimit, but it also must match all the specifications to be\ncounted or blocked. For example, suppose you add the following to a \nRateBasedRule:\n\n *  An IPSet that matches the IP address 192.0.2.44/32 \n   \n   \n *  A ByteMatchSet that matches BadBot in the User-Agent header\n   \n   \n\nFurther, you specify a RateLimit of 15,000.\n\nYou then add the RateBasedRule to a WebACL and specify that you want to block\nrequests that meet the conditions in the rule. For a request to be blocked, it\nmust come from the IP address 192.0.2.44 and the User-Agent header in the\nrequest must contain the value BadBot. Further, requests that match these two\nconditions must be received at a rate of more than 15,000 requests every five\nminutes. If both conditions are met and the rate is exceeded, AWS WAF blocks the\nrequests. If the rate drops below 15,000 for a five-minute period, AWS WAF no\nlonger blocks the requests.\n\nAs a second example, suppose you want to limit requests to a particular page on\nyour site. To do this, you could add the following to a RateBasedRule:\n\n *  A ByteMatchSet with FieldToMatch of URI \n   \n   \n *  A PositionalConstraint of STARTS_WITH \n   \n   \n *  A TargetString of login \n   \n   \n\nFurther, you specify a RateLimit of 15,000.\n\nBy adding this RateBasedRule to a WebACL, you could limit requests to your login\npage without affecting the rest of your site.\n\nTo create and configure a RateBasedRule, perform the following steps:\n\n 1.  Create and update the predicates that you want to include in the rule. For\n    more information, see CreateByteMatchSet, CreateIPSet, and \n    CreateSqlInjectionMatchSet.\n    \n    \n 2.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of a CreateRule request.\n    \n    \n 3.  Submit a CreateRateBasedRule request.\n    \n    \n 4.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of an UpdateRule request.\n    \n    \n 5.  Submit an UpdateRateBasedRule request to specify the predicates that you\n    want to include in the rule.\n    \n    \n 6.  Create and update a WebACL that contains the RateBasedRule. For more\n    information, see CreateWebACL.\n    \n    \n\nFor more information about how to use the AWS WAF API to allow or block HTTP\nrequests, see the AWS WAF Developer Guide\n[https://docs.aws.amazon.com/waf/latest/developerguide/].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateRateBasedRule.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateRegexMatchSet": {
            "main": "./lib/actions/CreateRegexMatchSet.js",
            "title": "CreateRegexMatchSet",
            "description": "Creates a RegexMatchSet. You then use UpdateRegexMatchSet to identify the part\nof a web request that you want AWS WAF to inspect, such as the values of the \nUser-Agent header or the query string. For example, you can create a \nRegexMatchSet that contains a RegexMatchTuple that looks for any requests with \nUser-Agent headers that match a RegexPatternSet with pattern B[a@]dB[o0]t. You\ncan then configure AWS WAF to reject those requests.\n\nTo create and configure a RegexMatchSet, perform the following steps:\n\n 1.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of a CreateRegexMatchSet request.\n    \n    \n 2.  Submit a CreateRegexMatchSet request.\n    \n    \n 3.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of an UpdateRegexMatchSet request.\n    \n    \n 4.  Submit an UpdateRegexMatchSet request to specify the part of the request\n    that you want AWS WAF to inspect (for example, the header or the URI) and\n    the value, using a RegexPatternSet, that you want AWS WAF to watch for.\n    \n    \n\nFor more information about how to use the AWS WAF API to allow or block HTTP\nrequests, see the AWS WAF Developer Guide\n[https://docs.aws.amazon.com/waf/latest/developerguide/].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateRegexMatchSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateRegexPatternSet": {
            "main": "./lib/actions/CreateRegexPatternSet.js",
            "title": "CreateRegexPatternSet",
            "description": "Creates a RegexPatternSet. You then use UpdateRegexPatternSet to specify the\nregular expression (regex) pattern that you want AWS WAF to search for, such as \nB[a@]dB[o0]t. You can then configure AWS WAF to reject those requests.\n\nTo create and configure a RegexPatternSet, perform the following steps:\n\n 1.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of a CreateRegexPatternSet request.\n    \n    \n 2.  Submit a CreateRegexPatternSet request.\n    \n    \n 3.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of an UpdateRegexPatternSet request.\n    \n    \n 4.  Submit an UpdateRegexPatternSet request to specify the string that you want\n    AWS WAF to watch for.\n    \n    \n\nFor more information about how to use the AWS WAF API to allow or block HTTP\nrequests, see the AWS WAF Developer Guide\n[https://docs.aws.amazon.com/waf/latest/developerguide/].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateRegexPatternSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateRule": {
            "main": "./lib/actions/CreateRule.js",
            "title": "CreateRule",
            "description": "Creates a Rule, which contains the IPSet objects, ByteMatchSet objects, and\nother predicates that identify the requests that you want to block. If you add\nmore than one predicate to a Rule, a request must match all of the\nspecifications to be allowed or blocked. For example, suppose that you add the\nfollowing to a Rule:\n\n *  An IPSet that matches the IP address 192.0.2.44/32 \n   \n   \n *  A ByteMatchSet that matches BadBot in the User-Agent header\n   \n   \n\nYou then add the Rule to a WebACL and specify that you want to blocks requests\nthat satisfy the Rule. For a request to be blocked, it must come from the IP\naddress 192.0.2.44 and the User-Agent header in the request must contain the\nvalue BadBot.\n\nTo create and configure a Rule, perform the following steps:\n\n 1.  Create and update the predicates that you want to include in the Rule. For\n    more information, see CreateByteMatchSet, CreateIPSet, and \n    CreateSqlInjectionMatchSet.\n    \n    \n 2.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of a CreateRule request.\n    \n    \n 3.  Submit a CreateRule request.\n    \n    \n 4.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of an UpdateRule request.\n    \n    \n 5.  Submit an UpdateRule request to specify the predicates that you want to\n    include in the Rule.\n    \n    \n 6.  Create and update a WebACL that contains the Rule. For more information, see \n    CreateWebACL.\n    \n    \n\nFor more information about how to use the AWS WAF API to allow or block HTTP\nrequests, see the AWS WAF Developer Guide\n[https://docs.aws.amazon.com/waf/latest/developerguide/].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateRule.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateRuleGroup": {
            "main": "./lib/actions/CreateRuleGroup.js",
            "title": "CreateRuleGroup",
            "description": "Creates a RuleGroup. A rule group is a collection of predefined rules that you\nadd to a web ACL. You use UpdateRuleGroup to add rules to the rule group.\n\nRule groups are subject to the following limits:\n\n *  Three rule groups per account. You can request an increase to this limit by\n   contacting customer support.\n   \n   \n *  One rule group per web ACL.\n   \n   \n *  Ten rules per rule group.\n   \n   \n\nFor more information about how to use the AWS WAF API to allow or block HTTP\nrequests, see the AWS WAF Developer Guide\n[https://docs.aws.amazon.com/waf/latest/developerguide/].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateRuleGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateSizeConstraintSet": {
            "main": "./lib/actions/CreateSizeConstraintSet.js",
            "title": "CreateSizeConstraintSet",
            "description": "Creates a SizeConstraintSet. You then use UpdateSizeConstraintSet to identify\nthe part of a web request that you want AWS WAF to check for length, such as the\nlength of the User-Agent header or the length of the query string. For example,\nyou can create a SizeConstraintSet that matches any requests that have a query\nstring that is longer than 100 bytes. You can then configure AWS WAF to reject\nthose requests.\n\nTo create and configure a SizeConstraintSet, perform the following steps:\n\n 1.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of a CreateSizeConstraintSet request.\n    \n    \n 2.  Submit a CreateSizeConstraintSet request.\n    \n    \n 3.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of an UpdateSizeConstraintSet request.\n    \n    \n 4.  Submit an UpdateSizeConstraintSet request to specify the part of the request\n    that you want AWS WAF to inspect (for example, the header or the URI) and\n    the value that you want AWS WAF to watch for.\n    \n    \n\nFor more information about how to use the AWS WAF API to allow or block HTTP\nrequests, see the AWS WAF Developer Guide\n[https://docs.aws.amazon.com/waf/latest/developerguide/].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateSizeConstraintSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateSqlInjectionMatchSet": {
            "main": "./lib/actions/CreateSqlInjectionMatchSet.js",
            "title": "CreateSqlInjectionMatchSet",
            "description": "Creates a SqlInjectionMatchSet, which you use to allow, block, or count requests\nthat contain snippets of SQL code in a specified part of web requests. AWS WAF\nsearches for character sequences that are likely to be malicious strings.\n\nTo create and configure a SqlInjectionMatchSet, perform the following steps:\n\n 1.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of a CreateSqlInjectionMatchSet request.\n    \n    \n 2.  Submit a CreateSqlInjectionMatchSet request.\n    \n    \n 3.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of an UpdateSqlInjectionMatchSet request.\n    \n    \n 4.  Submit an UpdateSqlInjectionMatchSet request to specify the parts of web\n    requests in which you want to allow, block, or count malicious SQL code.\n    \n    \n\nFor more information about how to use the AWS WAF API to allow or block HTTP\nrequests, see the AWS WAF Developer Guide\n[https://docs.aws.amazon.com/waf/latest/developerguide/].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateSqlInjectionMatchSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateWebACL": {
            "main": "./lib/actions/CreateWebACL.js",
            "title": "CreateWebACL",
            "description": "Creates a WebACL, which contains the Rules that identify the CloudFront web\nrequests that you want to allow, block, or count. AWS WAF evaluates Rules in\norder based on the value of Priority for each Rule.\n\nYou also specify a default action, either ALLOW or BLOCK. If a web request\ndoesn't match any of the Rules in a WebACL, AWS WAF responds to the request with\nthe default action. \n\nTo create and configure a WebACL, perform the following steps:\n\n 1.  Create and update the ByteMatchSet objects and other predicates that you\n    want to include in Rules. For more information, see CreateByteMatchSet, \n    UpdateByteMatchSet, CreateIPSet, UpdateIPSet, CreateSqlInjectionMatchSet,\n    and UpdateSqlInjectionMatchSet.\n    \n    \n 2.  Create and update the Rules that you want to include in the WebACL. For more\n    information, see CreateRule and UpdateRule.\n    \n    \n 3.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of a CreateWebACL request.\n    \n    \n 4.  Submit a CreateWebACL request.\n    \n    \n 5.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of an UpdateWebACL request.\n    \n    \n 6.  Submit an UpdateWebACL request to specify the Rules that you want to include\n    in the WebACL, to specify the default action, and to associate the WebACL \n    with a CloudFront distribution.\n    \n    \n\nFor more information about how to use the AWS WAF API, see the AWS WAF Developer\nGuide [https://docs.aws.amazon.com/waf/latest/developerguide/].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateWebACL.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateXssMatchSet": {
            "main": "./lib/actions/CreateXssMatchSet.js",
            "title": "CreateXssMatchSet",
            "description": "Creates an XssMatchSet, which you use to allow, block, or count requests that\ncontain cross-site scripting attacks in the specified part of web requests. AWS\nWAF searches for character sequences that are likely to be malicious strings.\n\nTo create and configure an XssMatchSet, perform the following steps:\n\n 1.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of a CreateXssMatchSet request.\n    \n    \n 2.  Submit a CreateXssMatchSet request.\n    \n    \n 3.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of an UpdateXssMatchSet request.\n    \n    \n 4.  Submit an UpdateXssMatchSet request to specify the parts of web requests in\n    which you want to allow, block, or count cross-site scripting attacks.\n    \n    \n\nFor more information about how to use the AWS WAF API to allow or block HTTP\nrequests, see the AWS WAF Developer Guide\n[https://docs.aws.amazon.com/waf/latest/developerguide/].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateXssMatchSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteByteMatchSet": {
            "main": "./lib/actions/DeleteByteMatchSet.js",
            "title": "DeleteByteMatchSet",
            "description": "Permanently deletes a ByteMatchSet. You can't delete a ByteMatchSet if it's\nstill used in any Rules or if it still includes any ByteMatchTuple objects (any\nfilters).\n\nIf you just want to remove a ByteMatchSet from a Rule, use UpdateRule.\n\nTo permanently delete a ByteMatchSet, perform the following steps:\n\n 1.  Update the ByteMatchSet to remove filters, if any. For more information, see \n    UpdateByteMatchSet.\n    \n    \n 2.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of a DeleteByteMatchSet request.\n    \n    \n 3.  Submit a DeleteByteMatchSet request.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteByteMatchSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteGeoMatchSet": {
            "main": "./lib/actions/DeleteGeoMatchSet.js",
            "title": "DeleteGeoMatchSet",
            "description": "Permanently deletes a GeoMatchSet. You can't delete a GeoMatchSet if it's still\nused in any Rules or if it still includes any countries.\n\nIf you just want to remove a GeoMatchSet from a Rule, use UpdateRule.\n\nTo permanently delete a GeoMatchSet from AWS WAF, perform the following steps:\n\n 1.  Update the GeoMatchSet to remove any countries. For more information, see \n    UpdateGeoMatchSet.\n    \n    \n 2.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of a DeleteGeoMatchSet request.\n    \n    \n 3.  Submit a DeleteGeoMatchSet request.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteGeoMatchSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteIPSet": {
            "main": "./lib/actions/DeleteIPSet.js",
            "title": "DeleteIPSet",
            "description": "Permanently deletes an IPSet. You can't delete an IPSet if it's still used in\nany Rules or if it still includes any IP addresses.\n\nIf you just want to remove an IPSet from a Rule, use UpdateRule.\n\nTo permanently delete an IPSet from AWS WAF, perform the following steps:\n\n 1.  Update the IPSet to remove IP address ranges, if any. For more information,\n    see UpdateIPSet.\n    \n    \n 2.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of a DeleteIPSet request.\n    \n    \n 3.  Submit a DeleteIPSet request.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteIPSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteLoggingConfiguration": {
            "main": "./lib/actions/DeleteLoggingConfiguration.js",
            "title": "DeleteLoggingConfiguration",
            "description": "Permanently deletes the <a>LoggingConfiguration</a> from the specified web ACL.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteLoggingConfiguration.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeletePermissionPolicy": {
            "main": "./lib/actions/DeletePermissionPolicy.js",
            "title": "DeletePermissionPolicy",
            "description": "Permanently deletes an IAM policy from the specified RuleGroup.\n\nThe user making the request must be the owner of the RuleGroup.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeletePermissionPolicy.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteRateBasedRule": {
            "main": "./lib/actions/DeleteRateBasedRule.js",
            "title": "DeleteRateBasedRule",
            "description": "Permanently deletes a RateBasedRule. You can't delete a rule if it's still used\nin any WebACL objects or if it still includes any predicates, such as \nByteMatchSet objects.\n\nIf you just want to remove a rule from a WebACL, use UpdateWebACL.\n\nTo permanently delete a RateBasedRule from AWS WAF, perform the following steps:\n\n 1.  Update the RateBasedRule to remove predicates, if any. For more information,\n    see UpdateRateBasedRule.\n    \n    \n 2.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of a DeleteRateBasedRule request.\n    \n    \n 3.  Submit a DeleteRateBasedRule request.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteRateBasedRule.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteRegexMatchSet": {
            "main": "./lib/actions/DeleteRegexMatchSet.js",
            "title": "DeleteRegexMatchSet",
            "description": "Permanently deletes a RegexMatchSet. You can't delete a RegexMatchSet if it's\nstill used in any Rules or if it still includes any RegexMatchTuples objects\n(any filters).\n\nIf you just want to remove a RegexMatchSet from a Rule, use UpdateRule.\n\nTo permanently delete a RegexMatchSet, perform the following steps:\n\n 1.  Update the RegexMatchSet to remove filters, if any. For more information,\n    see UpdateRegexMatchSet.\n    \n    \n 2.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of a DeleteRegexMatchSet request.\n    \n    \n 3.  Submit a DeleteRegexMatchSet request.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteRegexMatchSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteRegexPatternSet": {
            "main": "./lib/actions/DeleteRegexPatternSet.js",
            "title": "DeleteRegexPatternSet",
            "description": "Permanently deletes a <a>RegexPatternSet</a>. You can't delete a <code>RegexPatternSet</code> if it's still used in any <code>RegexMatchSet</code> or if the <code>RegexPatternSet</code> is not empty. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteRegexPatternSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteRule": {
            "main": "./lib/actions/DeleteRule.js",
            "title": "DeleteRule",
            "description": "Permanently deletes a Rule. You can't delete a Rule if it's still used in any \nWebACL objects or if it still includes any predicates, such as ByteMatchSet \nobjects.\n\nIf you just want to remove a Rule from a WebACL, use UpdateWebACL.\n\nTo permanently delete a Rule from AWS WAF, perform the following steps:\n\n 1.  Update the Rule to remove predicates, if any. For more information, see \n    UpdateRule.\n    \n    \n 2.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of a DeleteRule request.\n    \n    \n 3.  Submit a DeleteRule request.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteRule.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteRuleGroup": {
            "main": "./lib/actions/DeleteRuleGroup.js",
            "title": "DeleteRuleGroup",
            "description": "Permanently deletes a RuleGroup. You can't delete a RuleGroup if it's still used\nin any WebACL objects or if it still includes any rules.\n\nIf you just want to remove a RuleGroup from a WebACL, use UpdateWebACL.\n\nTo permanently delete a RuleGroup from AWS WAF, perform the following steps:\n\n 1.  Update the RuleGroup to remove rules, if any. For more information, see \n    UpdateRuleGroup.\n    \n    \n 2.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of a DeleteRuleGroup request.\n    \n    \n 3.  Submit a DeleteRuleGroup request.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteRuleGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteSizeConstraintSet": {
            "main": "./lib/actions/DeleteSizeConstraintSet.js",
            "title": "DeleteSizeConstraintSet",
            "description": "Permanently deletes a SizeConstraintSet. You can't delete a SizeConstraintSet if\nit's still used in any Rules or if it still includes any SizeConstraint objects\n(any filters).\n\nIf you just want to remove a SizeConstraintSet from a Rule, use UpdateRule.\n\nTo permanently delete a SizeConstraintSet, perform the following steps:\n\n 1.  Update the SizeConstraintSet to remove filters, if any. For more\n    information, see UpdateSizeConstraintSet.\n    \n    \n 2.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of a DeleteSizeConstraintSet request.\n    \n    \n 3.  Submit a DeleteSizeConstraintSet request.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteSizeConstraintSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteSqlInjectionMatchSet": {
            "main": "./lib/actions/DeleteSqlInjectionMatchSet.js",
            "title": "DeleteSqlInjectionMatchSet",
            "description": "Permanently deletes a SqlInjectionMatchSet. You can't delete a \nSqlInjectionMatchSet if it's still used in any Rules or if it still contains any \nSqlInjectionMatchTuple objects.\n\nIf you just want to remove a SqlInjectionMatchSet from a Rule, use UpdateRule.\n\nTo permanently delete a SqlInjectionMatchSet from AWS WAF, perform the following\nsteps:\n\n 1.  Update the SqlInjectionMatchSet to remove filters, if any. For more\n    information, see UpdateSqlInjectionMatchSet.\n    \n    \n 2.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of a DeleteSqlInjectionMatchSet request.\n    \n    \n 3.  Submit a DeleteSqlInjectionMatchSet request.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteSqlInjectionMatchSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteWebACL": {
            "main": "./lib/actions/DeleteWebACL.js",
            "title": "DeleteWebACL",
            "description": "Permanently deletes a WebACL. You can't delete a WebACL if it still contains any \nRules.\n\nTo delete a WebACL, perform the following steps:\n\n 1.  Update the WebACL to remove Rules, if any. For more information, see \n    UpdateWebACL.\n    \n    \n 2.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of a DeleteWebACL request.\n    \n    \n 3.  Submit a DeleteWebACL request.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteWebACL.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteXssMatchSet": {
            "main": "./lib/actions/DeleteXssMatchSet.js",
            "title": "DeleteXssMatchSet",
            "description": "Permanently deletes an XssMatchSet. You can't delete an XssMatchSet if it's\nstill used in any Rules or if it still contains any XssMatchTuple objects.\n\nIf you just want to remove an XssMatchSet from a Rule, use UpdateRule.\n\nTo permanently delete an XssMatchSet from AWS WAF, perform the following steps:\n\n 1.  Update the XssMatchSet to remove filters, if any. For more information, see \n    UpdateXssMatchSet.\n    \n    \n 2.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of a DeleteXssMatchSet request.\n    \n    \n 3.  Submit a DeleteXssMatchSet request.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteXssMatchSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DisassociateWebACL": {
            "main": "./lib/actions/DisassociateWebACL.js",
            "title": "DisassociateWebACL",
            "description": "Removes a web ACL from the specified resource, either an application load balancer or Amazon API Gateway stage.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DisassociateWebACL.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetByteMatchSet": {
            "main": "./lib/actions/GetByteMatchSet.js",
            "title": "GetByteMatchSet",
            "description": "Returns the <a>ByteMatchSet</a> specified by <code>ByteMatchSetId</code>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetByteMatchSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetChangeToken": {
            "main": "./lib/actions/GetChangeToken.js",
            "title": "GetChangeToken",
            "description": "When you want to create, update, or delete AWS WAF objects, get a change token\nand include the change token in the create, update, or delete request. Change\ntokens ensure that your application doesn't submit conflicting requests to AWS\nWAF.\n\nEach create, update, or delete request must use a unique change token. If your\napplication submits a GetChangeToken request and then submits a second \nGetChangeToken request before submitting a create, update, or delete request,\nthe second GetChangeToken request returns the same value as the first \nGetChangeToken request.\n\nWhen you use a change token in a create, update, or delete request, the status\nof the change token changes to PENDING, which indicates that AWS WAF is\npropagating the change to all AWS WAF servers. Use GetChangeTokenStatus to\ndetermine the status of your change token.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetChangeToken.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetChangeTokenStatus": {
            "main": "./lib/actions/GetChangeTokenStatus.js",
            "title": "GetChangeTokenStatus",
            "description": "Returns the status of a ChangeToken that you got by calling GetChangeToken. \nChangeTokenStatus is one of the following values:\n\n *   PROVISIONED: You requested the change token by calling GetChangeToken, but\n   you haven't used it yet in a call to create, update, or delete an AWS WAF\n   object.\n   \n   \n *   PENDING: AWS WAF is propagating the create, update, or delete request to all\n   AWS WAF servers.\n   \n   \n *   INSYNC: Propagation is complete.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetChangeTokenStatus.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetGeoMatchSet": {
            "main": "./lib/actions/GetGeoMatchSet.js",
            "title": "GetGeoMatchSet",
            "description": "Returns the <a>GeoMatchSet</a> that is specified by <code>GeoMatchSetId</code>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetGeoMatchSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetIPSet": {
            "main": "./lib/actions/GetIPSet.js",
            "title": "GetIPSet",
            "description": "Returns the <a>IPSet</a> that is specified by <code>IPSetId</code>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetIPSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetLoggingConfiguration": {
            "main": "./lib/actions/GetLoggingConfiguration.js",
            "title": "GetLoggingConfiguration",
            "description": "Returns the <a>LoggingConfiguration</a> for the specified web ACL.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetLoggingConfiguration.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetPermissionPolicy": {
            "main": "./lib/actions/GetPermissionPolicy.js",
            "title": "GetPermissionPolicy",
            "description": "Returns the IAM policy attached to the RuleGroup.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetPermissionPolicy.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetRateBasedRule": {
            "main": "./lib/actions/GetRateBasedRule.js",
            "title": "GetRateBasedRule",
            "description": "Returns the <a>RateBasedRule</a> that is specified by the <code>RuleId</code> that you included in the <code>GetRateBasedRule</code> request.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetRateBasedRule.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetRateBasedRuleManagedKeys": {
            "main": "./lib/actions/GetRateBasedRuleManagedKeys.js",
            "title": "GetRateBasedRuleManagedKeys",
            "description": "Returns an array of IP addresses currently being blocked by the <a>RateBasedRule</a> that is specified by the <code>RuleId</code>. The maximum number of managed keys that will be blocked is 10,000. If more than 10,000 addresses exceed the rate limit, the 10,000 addresses with the highest rates will be blocked.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetRateBasedRuleManagedKeys.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetRegexMatchSet": {
            "main": "./lib/actions/GetRegexMatchSet.js",
            "title": "GetRegexMatchSet",
            "description": "Returns the <a>RegexMatchSet</a> specified by <code>RegexMatchSetId</code>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetRegexMatchSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetRegexPatternSet": {
            "main": "./lib/actions/GetRegexPatternSet.js",
            "title": "GetRegexPatternSet",
            "description": "Returns the <a>RegexPatternSet</a> specified by <code>RegexPatternSetId</code>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetRegexPatternSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetRule": {
            "main": "./lib/actions/GetRule.js",
            "title": "GetRule",
            "description": "Returns the <a>Rule</a> that is specified by the <code>RuleId</code> that you included in the <code>GetRule</code> request.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetRule.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetRuleGroup": {
            "main": "./lib/actions/GetRuleGroup.js",
            "title": "GetRuleGroup",
            "description": "Returns the RuleGroup that is specified by the RuleGroupId that you included in\nthe GetRuleGroup request.\n\nTo view the rules in a rule group, use ListActivatedRulesInRuleGroup.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetRuleGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetSampledRequests": {
            "main": "./lib/actions/GetSampledRequests.js",
            "title": "GetSampledRequests",
            "description": "Gets detailed information about a specified number of requests--a sample--that\nAWS WAF randomly selects from among the first 5,000 requests that your AWS\nresource received during a time range that you choose. You can specify a sample\nsize of up to 500 requests, and you can specify any time range in the previous\nthree hours.\n\n GetSampledRequests returns a time range, which is usually the time range that\nyou specified. However, if your resource (such as a CloudFront distribution)\nreceived 5,000 requests before the specified time range elapsed, \nGetSampledRequests returns an updated time range. This new time range indicates\nthe actual period during which AWS WAF selected the requests in the sample.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSampledRequests.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetSizeConstraintSet": {
            "main": "./lib/actions/GetSizeConstraintSet.js",
            "title": "GetSizeConstraintSet",
            "description": "Returns the <a>SizeConstraintSet</a> specified by <code>SizeConstraintSetId</code>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSizeConstraintSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetSqlInjectionMatchSet": {
            "main": "./lib/actions/GetSqlInjectionMatchSet.js",
            "title": "GetSqlInjectionMatchSet",
            "description": "Returns the <a>SqlInjectionMatchSet</a> that is specified by <code>SqlInjectionMatchSetId</code>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSqlInjectionMatchSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetWebACL": {
            "main": "./lib/actions/GetWebACL.js",
            "title": "GetWebACL",
            "description": "Returns the <a>WebACL</a> that is specified by <code>WebACLId</code>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetWebACL.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetWebACLForResource": {
            "main": "./lib/actions/GetWebACLForResource.js",
            "title": "GetWebACLForResource",
            "description": "Returns the web ACL for the specified resource, either an application load balancer or Amazon API Gateway stage.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetWebACLForResource.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetXssMatchSet": {
            "main": "./lib/actions/GetXssMatchSet.js",
            "title": "GetXssMatchSet",
            "description": "Returns the <a>XssMatchSet</a> that is specified by <code>XssMatchSetId</code>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetXssMatchSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListActivatedRulesInRuleGroup": {
            "main": "./lib/actions/ListActivatedRulesInRuleGroup.js",
            "title": "ListActivatedRulesInRuleGroup",
            "description": "Returns an array of <a>ActivatedRule</a> objects.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListActivatedRulesInRuleGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListByteMatchSets": {
            "main": "./lib/actions/ListByteMatchSets.js",
            "title": "ListByteMatchSets",
            "description": "Returns an array of <a>ByteMatchSetSummary</a> objects.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListByteMatchSets.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListGeoMatchSets": {
            "main": "./lib/actions/ListGeoMatchSets.js",
            "title": "ListGeoMatchSets",
            "description": "Returns an array of <a>GeoMatchSetSummary</a> objects in the response.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListGeoMatchSets.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListIPSets": {
            "main": "./lib/actions/ListIPSets.js",
            "title": "ListIPSets",
            "description": "Returns an array of <a>IPSetSummary</a> objects in the response.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListIPSets.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListLoggingConfigurations": {
            "main": "./lib/actions/ListLoggingConfigurations.js",
            "title": "ListLoggingConfigurations",
            "description": "Returns an array of <a>LoggingConfiguration</a> objects.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListLoggingConfigurations.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListRateBasedRules": {
            "main": "./lib/actions/ListRateBasedRules.js",
            "title": "ListRateBasedRules",
            "description": "Returns an array of <a>RuleSummary</a> objects.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListRateBasedRules.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListRegexMatchSets": {
            "main": "./lib/actions/ListRegexMatchSets.js",
            "title": "ListRegexMatchSets",
            "description": "Returns an array of <a>RegexMatchSetSummary</a> objects.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListRegexMatchSets.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListRegexPatternSets": {
            "main": "./lib/actions/ListRegexPatternSets.js",
            "title": "ListRegexPatternSets",
            "description": "Returns an array of <a>RegexPatternSetSummary</a> objects.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListRegexPatternSets.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListResourcesForWebACL": {
            "main": "./lib/actions/ListResourcesForWebACL.js",
            "title": "ListResourcesForWebACL",
            "description": "Returns an array of resources associated with the specified web ACL.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListResourcesForWebACL.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListRuleGroups": {
            "main": "./lib/actions/ListRuleGroups.js",
            "title": "ListRuleGroups",
            "description": "Returns an array of <a>RuleGroup</a> objects.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListRuleGroups.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListRules": {
            "main": "./lib/actions/ListRules.js",
            "title": "ListRules",
            "description": "Returns an array of <a>RuleSummary</a> objects.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListRules.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListSizeConstraintSets": {
            "main": "./lib/actions/ListSizeConstraintSets.js",
            "title": "ListSizeConstraintSets",
            "description": "Returns an array of <a>SizeConstraintSetSummary</a> objects.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListSizeConstraintSets.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListSqlInjectionMatchSets": {
            "main": "./lib/actions/ListSqlInjectionMatchSets.js",
            "title": "ListSqlInjectionMatchSets",
            "description": "Returns an array of <a>SqlInjectionMatchSet</a> objects.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListSqlInjectionMatchSets.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListSubscribedRuleGroups": {
            "main": "./lib/actions/ListSubscribedRuleGroups.js",
            "title": "ListSubscribedRuleGroups",
            "description": "Returns an array of <a>RuleGroup</a> objects that you are subscribed to.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListSubscribedRuleGroups.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListWebACLs": {
            "main": "./lib/actions/ListWebACLs.js",
            "title": "ListWebACLs",
            "description": "Returns an array of <a>WebACLSummary</a> objects in the response.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListWebACLs.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListXssMatchSets": {
            "main": "./lib/actions/ListXssMatchSets.js",
            "title": "ListXssMatchSets",
            "description": "Returns an array of <a>XssMatchSet</a> objects.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListXssMatchSets.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PutLoggingConfiguration": {
            "main": "./lib/actions/PutLoggingConfiguration.js",
            "title": "PutLoggingConfiguration",
            "description": "Associates a LoggingConfiguration with a specified web ACL.\n\nYou can access information about all traffic that AWS WAF inspects using the\nfollowing steps:\n\n 1.  Create an Amazon Kinesis Data Firehose . \n    \n    Create the data firehose with a PUT source and in the region that you are\n    operating. However, if you are capturing logs for Amazon CloudFront, always\n    create the firehose in US East (N. Virginia). \n    \n    \n 2.  Associate that firehose to your web ACL using a PutLoggingConfiguration \n    request.\n    \n    \n\nWhen you successfully enable logging using a PutLoggingConfiguration request,\nAWS WAF will create a service linked role with the necessary permissions to\nwrite logs to the Amazon Kinesis Data Firehose. For more information, see \nLogging Web ACL Traffic Information\n[https://docs.aws.amazon.com/waf/latest/developerguide/logging.html] in the AWS\nWAF Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PutLoggingConfiguration.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PutPermissionPolicy": {
            "main": "./lib/actions/PutPermissionPolicy.js",
            "title": "PutPermissionPolicy",
            "description": "Attaches a IAM policy to the specified resource. The only supported use for this\naction is to share a RuleGroup across accounts.\n\nThe PutPermissionPolicy is subject to the following restrictions:\n\n *  You can attach only one policy with each PutPermissionPolicy request.\n   \n   \n *  The policy must include an Effect, Action and Principal. \n   \n   \n *   Effect must specify Allow.\n   \n   \n *  The Action in the policy must be waf:UpdateWebACL, waf-regional:UpdateWebACL, \n   waf:GetRuleGroup and waf-regional:GetRuleGroup . Any extra or wildcard\n   actions in the policy will be rejected.\n   \n   \n *  The policy cannot include a Resource parameter.\n   \n   \n *  The ARN in the request must be a valid WAF RuleGroup ARN and the RuleGroup\n   must exist in the same region.\n   \n   \n *  The user making the request must be the owner of the RuleGroup.\n   \n   \n *  Your policy must be composed using IAM Policy version 2012-10-17.\n   \n   \n\nFor more information, see IAM Policies\n[https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html]. \n\nAn example of a valid policy parameter is shown in the Examples section below.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PutPermissionPolicy.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateByteMatchSet": {
            "main": "./lib/actions/UpdateByteMatchSet.js",
            "title": "UpdateByteMatchSet",
            "description": "Inserts or deletes ByteMatchTuple objects (filters) in a ByteMatchSet. For each \nByteMatchTuple object, you specify the following values: \n\n *  Whether to insert or delete the object from the array. If you want to change\n   a ByteMatchSetUpdate object, you delete the existing object and add a new\n   one.\n   \n   \n *  The part of a web request that you want AWS WAF to inspect, such as a query\n   string or the value of the User-Agent header. \n   \n   \n *  The bytes (typically a string that corresponds with ASCII characters) that\n   you want AWS WAF to look for. For more information, including how you specify\n   the values for the AWS WAF API and the AWS CLI or SDKs, see TargetString in\n   the ByteMatchTuple data type. \n   \n   \n *  Where to look, such as at the beginning or the end of a query string.\n   \n   \n *  Whether to perform any conversions on the request, such as converting it to\n   lowercase, before inspecting it for the specified string.\n   \n   \n\nFor example, you can add a ByteMatchSetUpdate object that matches web requests\nin which User-Agent headers contain the string BadBot. You can then configure\nAWS WAF to block those requests.\n\nTo create and configure a ByteMatchSet, perform the following steps:\n\n 1.  Create a ByteMatchSet. For more information, see CreateByteMatchSet.\n    \n    \n 2.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of an UpdateByteMatchSet request.\n    \n    \n 3.  Submit an UpdateByteMatchSet request to specify the part of the request that\n    you want AWS WAF to inspect (for example, the header or the URI) and the\n    value that you want AWS WAF to watch for.\n    \n    \n\nFor more information about how to use the AWS WAF API to allow or block HTTP\nrequests, see the AWS WAF Developer Guide\n[https://docs.aws.amazon.com/waf/latest/developerguide/].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateByteMatchSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateGeoMatchSet": {
            "main": "./lib/actions/UpdateGeoMatchSet.js",
            "title": "UpdateGeoMatchSet",
            "description": "Inserts or deletes GeoMatchConstraint objects in an GeoMatchSet. For each \nGeoMatchConstraint object, you specify the following values: \n\n *  Whether to insert or delete the object from the array. If you want to change\n   an GeoMatchConstraint object, you delete the existing object and add a new\n   one.\n   \n   \n *  The Type. The only valid value for Type is Country.\n   \n   \n *  The Value, which is a two character code for the country to add to the \n   GeoMatchConstraint object. Valid codes are listed in GeoMatchConstraint$Value\n   .\n   \n   \n\nTo create and configure an GeoMatchSet, perform the following steps:\n\n 1.  Submit a CreateGeoMatchSet request.\n    \n    \n 2.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of an UpdateGeoMatchSet request.\n    \n    \n 3.  Submit an UpdateGeoMatchSet request to specify the country that you want AWS\n    WAF to watch for.\n    \n    \n\nWhen you update an GeoMatchSet, you specify the country that you want to add\nand/or the country that you want to delete. If you want to change a country, you\ndelete the existing country and add the new one.\n\nFor more information about how to use the AWS WAF API to allow or block HTTP\nrequests, see the AWS WAF Developer Guide\n[https://docs.aws.amazon.com/waf/latest/developerguide/].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateGeoMatchSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateIPSet": {
            "main": "./lib/actions/UpdateIPSet.js",
            "title": "UpdateIPSet",
            "description": "Inserts or deletes IPSetDescriptor objects in an IPSet. For each IPSetDescriptor \nobject, you specify the following values: \n\n *  Whether to insert or delete the object from the array. If you want to change\n   an IPSetDescriptor object, you delete the existing object and add a new one.\n   \n   \n *  The IP address version, IPv4 or IPv6. \n   \n   \n *  The IP address in CIDR notation, for example, 192.0.2.0/24 (for the range of\n   IP addresses from 192.0.2.0 to 192.0.2.255) or 192.0.2.44/32 (for the\n   individual IP address 192.0.2.44). \n   \n   \n\nAWS WAF supports IPv4 address ranges: /8 and any range between /16 through /32.\nAWS WAF supports IPv6 address ranges: /24, /32, /48, /56, /64, and /128. For\nmore information about CIDR notation, see the Wikipedia entry Classless\nInter-Domain Routing\n[https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing].\n\nIPv6 addresses can be represented using any of the following formats:\n\n *  1111:0000:0000:0000:0000:0000:0000:0111/128\n   \n   \n *  1111:0:0:0:0:0:0:0111/128\n   \n   \n *  1111::0111/128\n   \n   \n *  1111::111/128\n   \n   \n\nYou use an IPSet to specify which web requests you want to allow or block based\non the IP addresses that the requests originated from. For example, if you're\nreceiving a lot of requests from one or a small number of IP addresses and you\nwant to block the requests, you can create an IPSet that specifies those IP\naddresses, and then configure AWS WAF to block the requests. \n\nTo create and configure an IPSet, perform the following steps:\n\n 1.  Submit a CreateIPSet request.\n    \n    \n 2.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of an UpdateIPSet request.\n    \n    \n 3.  Submit an UpdateIPSet request to specify the IP addresses that you want AWS\n    WAF to watch for.\n    \n    \n\nWhen you update an IPSet, you specify the IP addresses that you want to add\nand/or the IP addresses that you want to delete. If you want to change an IP\naddress, you delete the existing IP address and add the new one.\n\nYou can insert a maximum of 1000 addresses in a single request.\n\nFor more information about how to use the AWS WAF API to allow or block HTTP\nrequests, see the AWS WAF Developer Guide\n[https://docs.aws.amazon.com/waf/latest/developerguide/].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateIPSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateRateBasedRule": {
            "main": "./lib/actions/UpdateRateBasedRule.js",
            "title": "UpdateRateBasedRule",
            "description": "Inserts or deletes Predicate objects in a rule and updates the RateLimit in the\nrule. \n\nEach Predicate object identifies a predicate, such as a ByteMatchSet or an IPSet\n, that specifies the web requests that you want to block or count. The RateLimit \nspecifies the number of requests every five minutes that triggers the rule.\n\nIf you add more than one predicate to a RateBasedRule, a request must match all\nthe predicates and exceed the RateLimit to be counted or blocked. For example,\nsuppose you add the following to a RateBasedRule:\n\n *  An IPSet that matches the IP address 192.0.2.44/32 \n   \n   \n *  A ByteMatchSet that matches BadBot in the User-Agent header\n   \n   \n\nFurther, you specify a RateLimit of 15,000.\n\nYou then add the RateBasedRule to a WebACL and specify that you want to block\nrequests that satisfy the rule. For a request to be blocked, it must come from\nthe IP address 192.0.2.44 and the User-Agent header in the request must contain\nthe value BadBot. Further, requests that match these two conditions much be\nreceived at a rate of more than 15,000 every five minutes. If the rate drops\nbelow this limit, AWS WAF no longer blocks the requests.\n\nAs a second example, suppose you want to limit requests to a particular page on\nyour site. To do this, you could add the following to a RateBasedRule:\n\n *  A ByteMatchSet with FieldToMatch of URI \n   \n   \n *  A PositionalConstraint of STARTS_WITH \n   \n   \n *  A TargetString of login \n   \n   \n\nFurther, you specify a RateLimit of 15,000.\n\nBy adding this RateBasedRule to a WebACL, you could limit requests to your login\npage without affecting the rest of your site.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateRateBasedRule.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateRegexMatchSet": {
            "main": "./lib/actions/UpdateRegexMatchSet.js",
            "title": "UpdateRegexMatchSet",
            "description": "Inserts or deletes RegexMatchTuple objects (filters) in a RegexMatchSet. For\neach RegexMatchSetUpdate object, you specify the following values: \n\n *  Whether to insert or delete the object from the array. If you want to change\n   a RegexMatchSetUpdate object, you delete the existing object and add a new\n   one.\n   \n   \n *  The part of a web request that you want AWS WAF to inspectupdate, such as a\n   query string or the value of the User-Agent header. \n   \n   \n *  The identifier of the pattern (a regular expression) that you want AWS WAF\n   to look for. For more information, see RegexPatternSet. \n   \n   \n *  Whether to perform any conversions on the request, such as converting it to\n   lowercase, before inspecting it for the specified string.\n   \n   \n\n For example, you can create a RegexPatternSet that matches any requests with \nUser-Agent headers that contain the string B[a@]dB[o0]t. You can then configure\nAWS WAF to reject those requests.\n\nTo create and configure a RegexMatchSet, perform the following steps:\n\n 1.  Create a RegexMatchSet. For more information, see CreateRegexMatchSet.\n    \n    \n 2.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of an UpdateRegexMatchSet request.\n    \n    \n 3.  Submit an UpdateRegexMatchSet request to specify the part of the request\n    that you want AWS WAF to inspect (for example, the header or the URI) and\n    the identifier of the RegexPatternSet that contain the regular expression\n    patters you want AWS WAF to watch for.\n    \n    \n\nFor more information about how to use the AWS WAF API to allow or block HTTP\nrequests, see the AWS WAF Developer Guide\n[https://docs.aws.amazon.com/waf/latest/developerguide/].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateRegexMatchSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateRegexPatternSet": {
            "main": "./lib/actions/UpdateRegexPatternSet.js",
            "title": "UpdateRegexPatternSet",
            "description": "Inserts or deletes RegexPatternString objects in a RegexPatternSet. For each \nRegexPatternString object, you specify the following values: \n\n *  Whether to insert or delete the RegexPatternString.\n   \n   \n *  The regular expression pattern that you want to insert or delete. For more\n   information, see RegexPatternSet. \n   \n   \n\n For example, you can create a RegexPatternString such as B[a@]dB[o0]t. AWS WAF\nwill match this RegexPatternString to:\n\n *  BadBot\n   \n   \n *  BadB0t\n   \n   \n *  B@dBot\n   \n   \n *  B@dB0t\n   \n   \n\nTo create and configure a RegexPatternSet, perform the following steps:\n\n 1.  Create a RegexPatternSet. For more information, see CreateRegexPatternSet.\n    \n    \n 2.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of an UpdateRegexPatternSet request.\n    \n    \n 3.  Submit an UpdateRegexPatternSet request to specify the regular expression\n    pattern that you want AWS WAF to watch for.\n    \n    \n\nFor more information about how to use the AWS WAF API to allow or block HTTP\nrequests, see the AWS WAF Developer Guide\n[https://docs.aws.amazon.com/waf/latest/developerguide/].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateRegexPatternSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateRule": {
            "main": "./lib/actions/UpdateRule.js",
            "title": "UpdateRule",
            "description": "Inserts or deletes Predicate objects in a Rule. Each Predicate object identifies\na predicate, such as a ByteMatchSet or an IPSet, that specifies the web requests\nthat you want to allow, block, or count. If you add more than one predicate to a \nRule, a request must match all of the specifications to be allowed, blocked, or\ncounted. For example, suppose that you add the following to a Rule: \n\n *  A ByteMatchSet that matches the value BadBot in the User-Agent header\n   \n   \n *  An IPSet that matches the IP address 192.0.2.44 \n   \n   \n\nYou then add the Rule to a WebACL and specify that you want to block requests\nthat satisfy the Rule. For a request to be blocked, the User-Agent header in the\nrequest must contain the value BadBot and the request must originate from the IP\naddress 192.0.2.44.\n\nTo create and configure a Rule, perform the following steps:\n\n 1.  Create and update the predicates that you want to include in the Rule.\n    \n    \n 2.  Create the Rule. See CreateRule.\n    \n    \n 3.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of an UpdateRule request.\n    \n    \n 4.  Submit an UpdateRule request to add predicates to the Rule.\n    \n    \n 5.  Create and update a WebACL that contains the Rule. See CreateWebACL.\n    \n    \n\nIf you want to replace one ByteMatchSet or IPSet with another, you delete the\nexisting one and add the new one.\n\nFor more information about how to use the AWS WAF API to allow or block HTTP\nrequests, see the AWS WAF Developer Guide\n[https://docs.aws.amazon.com/waf/latest/developerguide/].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateRule.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateRuleGroup": {
            "main": "./lib/actions/UpdateRuleGroup.js",
            "title": "UpdateRuleGroup",
            "description": "Inserts or deletes ActivatedRule objects in a RuleGroup.\n\nYou can only insert REGULAR rules into a rule group.\n\nYou can have a maximum of ten rules per rule group.\n\nTo create and configure a RuleGroup, perform the following steps:\n\n 1.  Create and update the Rules that you want to include in the RuleGroup. See \n    CreateRule.\n    \n    \n 2.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of an UpdateRuleGroup request.\n    \n    \n 3.  Submit an UpdateRuleGroup request to add Rules to the RuleGroup.\n    \n    \n 4.  Create and update a WebACL that contains the RuleGroup. See CreateWebACL.\n    \n    \n\nIf you want to replace one Rule with another, you delete the existing one and\nadd the new one.\n\nFor more information about how to use the AWS WAF API to allow or block HTTP\nrequests, see the AWS WAF Developer Guide\n[https://docs.aws.amazon.com/waf/latest/developerguide/].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateRuleGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateSizeConstraintSet": {
            "main": "./lib/actions/UpdateSizeConstraintSet.js",
            "title": "UpdateSizeConstraintSet",
            "description": "Inserts or deletes SizeConstraint objects (filters) in a SizeConstraintSet. For\neach SizeConstraint object, you specify the following values: \n\n *  Whether to insert or delete the object from the array. If you want to change\n   a SizeConstraintSetUpdate object, you delete the existing object and add a\n   new one.\n   \n   \n *  The part of a web request that you want AWS WAF to evaluate, such as the\n   length of a query string or the length of the User-Agent header.\n   \n   \n *  Whether to perform any transformations on the request, such as converting it\n   to lowercase, before checking its length. Note that transformations of the\n   request body are not supported because the AWS resource forwards only the\n   first 8192 bytes of your request to AWS WAF.\n   \n   You can only specify a single type of TextTransformation.\n   \n   \n *  A ComparisonOperator used for evaluating the selected part of the request\n   against the specified Size, such as equals, greater than, less than, and so\n   on.\n   \n   \n *  The length, in bytes, that you want AWS WAF to watch for in selected part of\n   the request. The length is computed after applying the transformation.\n   \n   \n\nFor example, you can add a SizeConstraintSetUpdate object that matches web\nrequests in which the length of the User-Agent header is greater than 100 bytes.\nYou can then configure AWS WAF to block those requests.\n\nTo create and configure a SizeConstraintSet, perform the following steps:\n\n 1.  Create a SizeConstraintSet. For more information, see \n    CreateSizeConstraintSet.\n    \n    \n 2.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of an UpdateSizeConstraintSet request.\n    \n    \n 3.  Submit an UpdateSizeConstraintSet request to specify the part of the request\n    that you want AWS WAF to inspect (for example, the header or the URI) and\n    the value that you want AWS WAF to watch for.\n    \n    \n\nFor more information about how to use the AWS WAF API to allow or block HTTP\nrequests, see the AWS WAF Developer Guide\n[https://docs.aws.amazon.com/waf/latest/developerguide/].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateSizeConstraintSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateSqlInjectionMatchSet": {
            "main": "./lib/actions/UpdateSqlInjectionMatchSet.js",
            "title": "UpdateSqlInjectionMatchSet",
            "description": "Inserts or deletes SqlInjectionMatchTuple objects (filters) in a \nSqlInjectionMatchSet. For each SqlInjectionMatchTuple object, you specify the\nfollowing values:\n\n *   Action: Whether to insert the object into or delete the object from the\n   array. To change a SqlInjectionMatchTuple, you delete the existing object and\n   add a new one.\n   \n   \n *   FieldToMatch: The part of web requests that you want AWS WAF to inspect and,\n   if you want AWS WAF to inspect a header or custom query parameter, the name\n   of the header or parameter.\n   \n   \n *   TextTransformation: Which text transformation, if any, to perform on the web\n   request before inspecting the request for snippets of malicious SQL code.\n   \n   You can only specify a single type of TextTransformation.\n   \n   \n\nYou use SqlInjectionMatchSet objects to specify which CloudFront requests that\nyou want to allow, block, or count. For example, if you're receiving requests\nthat contain snippets of SQL code in the query string and you want to block the\nrequests, you can create a SqlInjectionMatchSet with the applicable settings,\nand then configure AWS WAF to block the requests. \n\nTo create and configure a SqlInjectionMatchSet, perform the following steps:\n\n 1.  Submit a CreateSqlInjectionMatchSet request.\n    \n    \n 2.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of an UpdateIPSet request.\n    \n    \n 3.  Submit an UpdateSqlInjectionMatchSet request to specify the parts of web\n    requests that you want AWS WAF to inspect for snippets of SQL code.\n    \n    \n\nFor more information about how to use the AWS WAF API to allow or block HTTP\nrequests, see the AWS WAF Developer Guide\n[https://docs.aws.amazon.com/waf/latest/developerguide/].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateSqlInjectionMatchSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateWebACL": {
            "main": "./lib/actions/UpdateWebACL.js",
            "title": "UpdateWebACL",
            "description": "Inserts or deletes ActivatedRule objects in a WebACL. Each Rule identifies web\nrequests that you want to allow, block, or count. When you update a WebACL, you\nspecify the following values:\n\n *  A default action for the WebACL, either ALLOW or BLOCK. AWS WAF performs the\n   default action if a request doesn't match the criteria in any of the Rules in\n   a WebACL.\n   \n   \n *  The Rules that you want to add or delete. If you want to replace one Rule \n   with another, you delete the existing Rule and add the new one.\n   \n   \n *  For each Rule, whether you want AWS WAF to allow requests, block requests, or\n   count requests that match the conditions in the Rule.\n   \n   \n *  The order in which you want AWS WAF to evaluate the Rules in a WebACL. If you\n   add more than one Rule to a WebACL, AWS WAF evaluates each request against\n   the Rules in order based on the value of Priority. (The Rule that has the\n   lowest value for Priority is evaluated first.) When a web request matches all\n   the predicates (such as ByteMatchSets and IPSets) in a Rule, AWS WAF\n   immediately takes the corresponding action, allow or block, and doesn't\n   evaluate the request against the remaining Rules in the WebACL, if any. \n   \n   \n\nTo create and configure a WebACL, perform the following steps:\n\n 1.  Create and update the predicates that you want to include in Rules. For more\n    information, see CreateByteMatchSet, UpdateByteMatchSet, CreateIPSet, \n    UpdateIPSet, CreateSqlInjectionMatchSet, and UpdateSqlInjectionMatchSet.\n    \n    \n 2.  Create and update the Rules that you want to include in the WebACL. For more\n    information, see CreateRule and UpdateRule.\n    \n    \n 3.  Create a WebACL. See CreateWebACL.\n    \n    \n 4.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of an UpdateWebACL request.\n    \n    \n 5.  Submit an UpdateWebACL request to specify the Rules that you want to include\n    in the WebACL, to specify the default action, and to associate the WebACL \n    with a CloudFront distribution. \n    \n    The ActivatedRule can be a rule group. If you specify a rule group as your \n    ActivatedRule, you can exclude specific rules from that rule group.\n    \n    If you already have a rule group associated with a web ACL and want to\n    submit an UpdateWebACL request to exclude certain rules from that rule\n    group, you must first remove the rule group from the web ACL, the re-insert\n    it again, specifying the excluded rules. For details, see \n    ActivatedRule$ExcludedRules. \n    \n    \n\nBe aware that if you try to add a RATE_BASED rule to a web ACL without setting\nthe rule type when first creating the rule, the UpdateWebACL request will fail\nbecause the request tries to add a REGULAR rule (the default rule type) with the\nspecified ID, which does not exist. \n\nFor more information about how to use the AWS WAF API to allow or block HTTP\nrequests, see the AWS WAF Developer Guide\n[https://docs.aws.amazon.com/waf/latest/developerguide/].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateWebACL.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateXssMatchSet": {
            "main": "./lib/actions/UpdateXssMatchSet.js",
            "title": "UpdateXssMatchSet",
            "description": "Inserts or deletes XssMatchTuple objects (filters) in an XssMatchSet. For each \nXssMatchTuple object, you specify the following values:\n\n *   Action: Whether to insert the object into or delete the object from the\n   array. To change an XssMatchTuple, you delete the existing object and add a\n   new one.\n   \n   \n *   FieldToMatch: The part of web requests that you want AWS WAF to inspect and,\n   if you want AWS WAF to inspect a header or custom query parameter, the name\n   of the header or parameter.\n   \n   \n *   TextTransformation: Which text transformation, if any, to perform on the web\n   request before inspecting the request for cross-site scripting attacks.\n   \n   You can only specify a single type of TextTransformation.\n   \n   \n\nYou use XssMatchSet objects to specify which CloudFront requests that you want\nto allow, block, or count. For example, if you're receiving requests that\ncontain cross-site scripting attacks in the request body and you want to block\nthe requests, you can create an XssMatchSet with the applicable settings, and\nthen configure AWS WAF to block the requests. \n\nTo create and configure an XssMatchSet, perform the following steps:\n\n 1.  Submit a CreateXssMatchSet request.\n    \n    \n 2.  Use GetChangeToken to get the change token that you provide in the \n    ChangeToken parameter of an UpdateIPSet request.\n    \n    \n 3.  Submit an UpdateXssMatchSet request to specify the parts of web requests\n    that you want AWS WAF to inspect for cross-site scripting attacks.\n    \n    \n\nFor more information about how to use the AWS WAF API to allow or block HTTP\nrequests, see the AWS WAF Developer Guide\n[https://docs.aws.amazon.com/waf/latest/developerguide/].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateXssMatchSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        }
    }
}